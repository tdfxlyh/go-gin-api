// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"
)

const TableNameMessageSingle = "message_single"

// MessageSingle mapped from table <message_single>
type MessageSingle struct {
	ID                 int64     `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`                        // 主键id
	SenderUserID       int64     `gorm:"column:sender_user_id;not null" json:"sender_user_id"`                     // 消息发送方
	ReceiverUserID     int64     `gorm:"column:receiver_user_id;not null" json:"receiver_user_id"`                 // 消息接收方
	MessageType        int64     `gorm:"column:message_type" json:"message_type"`                                  // 消息类型 1:文本 2:图片 3:音频 4:视频 5:文件
	Content            string    `gorm:"column:content" json:"content"`                                            // 消息内容
	Extra              string    `gorm:"column:extra" json:"extra"`                                                // 扩展信息
	ReadStatusInfo     int32     `gorm:"column:read_status_info" json:"read_status_info"`                          // 判断接收者 0:未读 1:已读
	SenderStatusInfo   int32     `gorm:"column:sender_status_info" json:"sender_status_info"`                      // 发送方信息状态 0:正常 1:删除
	ReceiverStatusInfo int32     `gorm:"column:receiver_status_info" json:"receiver_status_info"`                  // 接收方信息状态 0:正常 1:删除
	MessageStatusInfo  int32     `gorm:"column:message_status_info" json:"message_status_info"`                    // 是否撤回 0:正常 1:撤回
	CreateTime         time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 创建时间
	ModifyTime         time.Time `gorm:"column:modify_time;not null;default:CURRENT_TIMESTAMP" json:"modify_time"` // 修改时间
	Status             int32     `gorm:"column:status" json:"status"`                                              // 0存在，1删除
}

// TableName MessageSingle's table name
func (*MessageSingle) TableName() string {
	return TableNameMessageSingle
}
